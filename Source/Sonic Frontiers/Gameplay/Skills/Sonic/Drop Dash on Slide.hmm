Code "Drop Dash on Slide" in "Gameplay/Skills/Sonic" by "Hyper"
//
    #include "BlackboardStatus" noemit

    #lib "Globals"
    #lib "Player"
//
{
    if (Player.GetPlayerType() != Player.PlayerType.Sonic)
        return;

    if (Player.State.GetCurrentStateID<Sonic.StateID>() == Sonic.StateID.StateSliding)
        Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateDropDash);

    // Ensure the state transition fixes don't conflict with the other code.
    if (Globals.GetFlag("Fix Drop Dash Transitions"))
        return;
        
    var state = Player.State.GetCurrentStateID<Sonic.StateID>();
    var isGrounded = Player.Status.IsGrounded();

    if (state == Sonic.StateID.StateDropDash)
    {
        if (Player.Input.IsPressed(Player.InputActionType.PlayerBoost))
            Player.State.SetState<Sonic.StateID>(isGrounded ? Sonic.StateID.StateRun : Sonic.StateID.StateAirBoost);

        if (Player.Input.IsPressed(Player.InputActionType.PlayerStomping))
            Player.State.SetState<Sonic.StateID>(isGrounded ? Sonic.StateID.StateRun : Sonic.StateID.StateStompingDown);

        if (Player.Input.IsPressed(Player.InputActionType.PlayerJump) && !isGrounded)
            Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateDoubleJump);

        if (Player.Input.IsPressed(Player.InputActionType.PlayerSonicboom))
            Player.State.SetState<Sonic.StateID>(Sonic.StateID.StateSpinBoostCharge);
    }
    else if (state == Sonic.StateID.StateRun)
    {
        if (Player.Input.IsDown(Player.InputActionType.PlayerBoost) && isGrounded)
        {
            if (Player.State.GetPreviousStateID<Sonic.StateID>() == Sonic.StateID.StateDropDash)
                SET_STATE_FLAG(IsBoost, true);
        }
    }
}