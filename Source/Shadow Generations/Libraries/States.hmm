Library "States" by "Hyper"
{
    #include "Helpers" noemit

    #lib "Helpers"
    #lib "Memory"

    #import "Collections"
    
    using System.Runtime.InteropServices;

    /// <summary>
    /// A struct representation of `hh::ut::internal::StateImpl`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x30)]
    public struct StateImpl
    {
        /// <summary>
        /// The virtual function table of this state.
        /// </summary>
        [FieldOffset(0)]    public long pVftable;

        [FieldOffset(0x08)] public long pAllocator;

        /// <summary>
        /// The unique ID pertaining to this state.
        /// </summary>
        [FieldOffset(0x18)] public int StateID;

        /// <summary>
        /// The name of this state.
        /// </summary>
        [FieldOffset(0x20)] public Helpers.UnmanagedString Name;

        [FieldOffset(0x28)] public void* pContext;
    }

    /// <summary>
    /// A struct representation of `hh::ut::internal::StateDescImpl`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x18)]
    public struct StateDescImpl
    {
        /// <summary>
        /// The name of this state.
        /// </summary>
        [FieldOffset(0)] public Helpers.UnmanagedString Name;
    }

    /// <summary>
    /// A struct representation of `hh::ut::StateBase`.
    /// </summary>
    [StructLayout(LayoutKind.Sequential, Size = 0xB0)]
    public struct StateBase
    {
        public StateImpl Base;
    }

    /// <summary>
    /// A struct representation of `hh::ut::StateBase`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x20)]
    public struct StateDesc { }

    /// <summary>
    /// A struct representation of `hh::ut::internal::HsmImpl`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x70)]
    public struct HsmImpl
    {
        /// <summary>
        /// The unique ID pertaining to this state.
        /// </summary>
        [FieldOffset(0x08)] public int StateID;

        /// <summary>
        /// The index of the current state.
        /// </summary>
        [FieldOffset(0x0C)] public int CurrentStateIndex;

        /// <summary>
        /// An array of pointers to `hh::ut::internal::StateImpl` instances.
        /// </summary>
        [FieldOffset(0x20)] public ObjectMoveArray<Memory.Pointer<StateImpl>> States;

        /// <summary>
        /// A pointer to an instance of `hh::ut::internal::StateImpl`.
        /// </summary>
        [FieldOffset(0x40)] public StateImpl* pState;
    }

    /// <summary>
    /// A struct representation of `hh::ut::HsmBase`.
    /// </summary>
    [StructLayout(LayoutKind.Sequential, Size = 0x70)]
    public struct HsmBase
    {
        public HsmImpl Base;
    }
}